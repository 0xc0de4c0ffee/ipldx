version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.15.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install things from npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build the site
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - build

  deploy:
    docker:
      - image: olizilla/ipfs-dns-deploy
        environment:
          DOMAIN: explore.ipld.io
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Pin website, post notification for PRs or update DNS on master
          command: |
            # Upload build dir to cluster.ipfs.io
            hash=$(ipfs-cluster-ctl \
              --host /dnsaddr/cluster.ipfs.io \
              --basic-auth $CLUSTER_USER:$CLUSTER_PASSWORD \
              add --rmin 3 --rmax 3 --name "$DOMAIN" \
              --recursive /tmp/workspace/build | tail -n1 | cut -d " " -f 2 )

            preview_url=https://ipfs.io/ipfs/$hash

            # Preload ipfs hash on the gateway
            curl --silent --output /dev/null --show-error $preview_url

            echo "Website available at $preview_url"

            if [ ! -z "$CIRCLE_PULL_REQUEST" ] ; then
              # Add website preview as PR Status - https://developer.github.com/v3/repos/statuses/#create-a-status

              status_url="https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/statuses/$CIRCLE_SHA1"
              state="success"
              description="Website added to IPFS"
              target_url="$preview_url"
              context="deploy/ipfs"

              curl --silent -H "Authorization: token $GITHUB_TOKEN" -X POST -d "{\"state\": \"$state\", \"description\": \"$description\", \"target_url\": \"$target_url\", , \"context\": \"$context\"}" $status_url

            elif [ "$CIRCLE_BRANCH" == "master" ] ; then
              # Update DNSLink for domain

              dnslink-dnsimple -d $DOMAIN -r _dnslink -l /ipfs/$hash

            else
              echo "Not a Pull Request or Master branch. Skipping."
            fi

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          context: ipfs-dns-deploy
          requires:
            - build
          # filters:
          #   branches:
          #     only: master
